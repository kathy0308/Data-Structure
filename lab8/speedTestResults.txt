InsertOrderSpeedTest

/Library/Java/JavaVirtualMachines/openjdk-14.0.1.jdk/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar=57852:/Applications/IntelliJ IDEA CE.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/kathy/Desktop/61b/fa20-s204/lab8/out/production/lab8:/Users/kathy/Desktop/61b/fa20-s204/library-fa20/javalib/algs4.jar:/Users/kathy/Desktop/61b/fa20-s204/library-fa20/javalib/jh61b.jar:/Users/kathy/Desktop/61b/fa20-s204/library-fa20/javalib/stdlib.jar:/Users/kathy/Desktop/61b/fa20-s204/library-fa20/javalib/junit-4.12.jar:/Users/kathy/Desktop/61b/fa20-s204/library-fa20/javalib/xchart-3.5.1.jar:/Users/kathy/Desktop/61b/fa20-s204/library-fa20/javalib/stdlib-package.jar:/Users/kathy/Desktop/61b/fa20-s204/library-fa20/javalib/hamcrest-core-1.3.jar InsertInOrderSpeedTest

 This program inserts lexicographically increasing Stringsinto Maps as <String, Integer> pairs.

Enter # strings to insert into ULLMap: 1000
class ULLMap: 0.03 sec

Enter # strings to insert into MyHashMap: 10000
class MyHashMap: 0.03 sec

Enter # strings to insert into Java's HashMap: 100000
Java's Built-in HashMap: 0.10 sec

Would you like to try more timed-tests? (y/n): y

InsertRandomSpeedTest

/Library/Java/JavaVirtualMachines/openjdk-14.0.1.jdk/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar=57882:/Applications/IntelliJ IDEA CE.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/kathy/Desktop/61b/fa20-s204/lab8/out/production/lab8:/Users/kathy/Desktop/61b/fa20-s204/library-fa20/javalib/algs4.jar:/Users/kathy/Desktop/61b/fa20-s204/library-fa20/javalib/jh61b.jar:/Users/kathy/Desktop/61b/fa20-s204/library-fa20/javalib/stdlib.jar:/Users/kathy/Desktop/61b/fa20-s204/library-fa20/javalib/junit-4.12.jar:/Users/kathy/Desktop/61b/fa20-s204/library-fa20/javalib/xchart-3.5.1.jar:/Users/kathy/Desktop/61b/fa20-s204/library-fa20/javalib/stdlib-package.jar:/Users/kathy/Desktop/61b/fa20-s204/library-fa20/javalib/hamcrest-core-1.3.jar InsertRandomSpeedTest

 This program inserts random Strings of length L
 Into different types of maps as <String, Integer> pairs.

What would you like L to be?: 1000

Enter # strings to insert into ULLMap: 10000
class ULLMap: 1.02 sec

Enter # strings to insert into your MyHashMap: 100000
class MyHashMap: 1.35 sec

Enter # strings to insert into Java's HashMap: 10000
Java's Built-in HashMap: 0.14 sec

Would you like to try more timed-tests? (y/n)
